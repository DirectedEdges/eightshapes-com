// DO NOT EDIT: This file is automatically generated by the project's build task
$(document).ready(function () {
    $('#vocab_all').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').addClass('active');
      return false;
    });
    $('#vocab_compress').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').removeClass('active');
        $('.vocab_compress').addClass('active');
      return false;
    });
    $('#vocab_resist').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').removeClass('active');
        $('.vocab_resist').addClass('active');
      return false;
    });
    $('#vocab_stack').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').removeClass('active');
        $('.vocab_stack').addClass('active');
      return false;
    });
    $('#vocab_push').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').removeClass('active');
        $('.vocab_push').addClass('active');
      return false;
    });
    $('#vocab_assemble').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').removeClass('active');
        $('.vocab_assemble').addClass('active');
      return false;
    });
    $('#vocab_disappear').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').removeClass('active');
        $('.vocab_disappear').addClass('active');
      return false;
    });
    $('#vocab_lock').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').removeClass('active');
        $('.vocab_lock').addClass('active');
      return false;
    });
    $('#vocab_bleed').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').removeClass('active');
        $('.vocab_bleed').addClass('active');
      return false;
    });
    $('#vocab_parfait').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').removeClass('active');
        $('.vocab_parfait').addClass('active');
      return false;
    });
    $('#vocab_apron').on("click", function() {
        $('.make-table li').removeClass('active');
        $(this).parent().addClass('active');
        $('.vocab_all').removeClass('active');
        $('.vocab_apron').addClass('active');
      return false;
    });
});




!function(a,b){"function"==typeof define&&define.amd?define([],function(){return a.svg4everybody=b()}):"object"==typeof exports?module.exports=b():a.svg4everybody=b()}(this,function(){/*! svg4everybody v2.0.0 | github.com/jonathantneal/svg4everybody */
function a(a,b){if(b){var c=!a.getAttribute("viewBox")&&b.getAttribute("viewBox"),d=document.createDocumentFragment(),e=b.cloneNode(!0);for(c&&a.setAttribute("viewBox",c);e.childNodes.length;)d.appendChild(e.firstChild);a.appendChild(d)}}function b(b){b.onreadystatechange=function(){if(4===b.readyState){var c=document.createElement("x");c.innerHTML=b.responseText,b.s.splice(0).map(function(b){a(b[0],c.querySelector("#"+b[1].replace(/(\W)/g,"\\$1")))})}},b.onreadystatechange()}function c(c){function d(){for(var c;c=e[0];){var j=c.parentNode;if(j&&/svg/i.test(j.nodeName)){var k=c.getAttribute("xlink:href");if(f&&(!g||g(k,j,c))){var l=k.split("#"),m=l[0],n=l[1];if(j.removeChild(c),m.length){var o=i[m]=i[m]||new XMLHttpRequest;o.s||(o.s=[],o.open("GET",m),o.send()),o.s.push([j,n]),b(o)}else a(j,document.getElementById(n))}}}h(d,17)}c=c||{};var e=document.getElementsByTagName("use"),f="shim"in c?c.shim:/\bEdge\/12\b|\bTrident\/[567]\b|\bVersion\/7.0 Safari\b/.test(navigator.userAgent)||(navigator.userAgent.match(/AppleWebKit\/(\d+)/)||[])[1]<537,g=c.validate,h=window.requestAnimationFrame||setTimeout,i={};f&&d()}return c});

svg4everybody();

////////////////////////////////////////////////////////////
////                                                    ////
////    FINDING                                         ////
////                                                    ////
////////////////////////////////////////////////////////////

equalheight = function(container, itemUnit, minWidth) {

  if (window.matchMedia('(min-width: ' + minWidth + ')').matches) {
    // wider than *minWidth*

    // Remove style="min-height:NNpx" attribute
    $(container).find(itemUnit).removeAttr('style');
    
    // Apply tallest one to all
    $(container).each(function() {

      var $self   = $(this);
      var $target = $self.find(itemUnit);

      $target.each(function(index) {

        var currentTallest = 0;
        var $self      = $(this);
        var selfHeight = $self.height();

    		if(selfHeight > currentTallest) {
    			currentTallest = selfHeight;
          //console.log('Current tallest is now ' + currentTallest);
    		}

        $target.css('min-height', currentTallest);

      });

    });

  } else {
    // narrower than *minWidth*
    $(container).find(itemUnit).removeAttr('style');

  }

};

equalheight('.eqh', '.cs-finding_bd', '768px');

$(window).resize(function(){
  equalheight('.eqh', '.cs-finding_bd', '768px');
});

